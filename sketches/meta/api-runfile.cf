

# environment common bundles

# environment 04d95ef41b01cbd5b5c00fc847b3f584
bundle common 04d95ef41b01cbd5b5c00fc847b3f584
{
  vars:
      "activated" string => "--'activated' value passed as a class function--";
      "env_vars" slist => { "activated", "test", "verbose" };
      "test" string => "";
      "verbose" string => "";
  classes:
      "runenv_04d95ef41b01cbd5b5c00fc847b3f584_activated" and => { classmatch("linux"), classmatch("centos") };
      "runenv_04d95ef41b01cbd5b5c00fc847b3f584_test" expression => "!any";
      "runenv_04d95ef41b01cbd5b5c00fc847b3f584_verbose" expression => "!any";
}


# activation data
bundle common cfsketch_g
{
  vars:
      # Files that need to be loaded for the activated sketches and
      # their dependencies.
      "inputs" slist => { "sketches/libraries/dclib/library.cf", "sketches/package_management/packages_installed/main.cf" };
}

bundle agent cfsketch_run
{
  vars:

      # array 'metadata' from definition sketch metadata, activation __test_001_Packages_installed_installed
      "__test_001_Packages_installed_installed_metadata[activation][identifier]" string => "test";
      "__test_001_Packages_installed_installed_metadata[activation][timestamp]" string => "1369955581";
      "__test_001_Packages_installed_installed_metadata[api][][type]" string => "bundle_options";
      "__test_001_Packages_installed_installed_metadata[api][metadata][type]" string => "metadata";
      "__test_001_Packages_installed_installed_metadata[api][pkgs_add][type]" string => "list";
      "__test_001_Packages_installed_installed_metadata[api][pkgs_delete][type]" string => "list";
      "__test_001_Packages_installed_installed_metadata[api][runenv][type]" string => "environment";
      "__test_001_Packages_installed_installed_metadata[authors]" slist => { "Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>" };
      "__test_001_Packages_installed_installed_metadata[bundle_options][single_use]" string => "1";
      "__test_001_Packages_installed_installed_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "__test_001_Packages_installed_installed_metadata[license]" string => "MIT";
      "__test_001_Packages_installed_installed_metadata[location]" string => "sketches/package_management/packages_installed";
      "__test_001_Packages_installed_installed_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "__test_001_Packages_installed_installed_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "__test_001_Packages_installed_installed_metadata[manifest_docs]" slist => { "README.md" };
      "__test_001_Packages_installed_installed_metadata[manifest_exe]" slist => { "cf_null" };
      "__test_001_Packages_installed_installed_metadata[manifest_extra]" slist => { "params/demo.json" };
      "__test_001_Packages_installed_installed_metadata[manifest_test]" slist => { "test.pl" };
      "__test_001_Packages_installed_installed_metadata[name]" string => "Packages::installed";
      "__test_001_Packages_installed_installed_metadata[tags]" slist => { "cfdc", "packages", "enterprise_compatible" };
      "__test_001_Packages_installed_installed_metadata[version]" string => "1.0.0";

      # list 'pkgs_add' from definition 70cbf8a193286383c4e50923d502369b, activation __test_001_Packages_installed_installed
      "__test_001_Packages_installed_installed_pkgs_add" slist => { "apache2" };

      # list 'pkgs_delete' from definition 70cbf8a193286383c4e50923d502369b, activation __test_001_Packages_installed_installed
      "__test_001_Packages_installed_installed_pkgs_delete" slist => { "somenothing" };

  methods:
    any::
      "cfsketch_g" usebundle => "cfsketch_g";
      "04d95ef41b01cbd5b5c00fc847b3f584" usebundle => "04d95ef41b01cbd5b5c00fc847b3f584";

    runenv_04d95ef41b01cbd5b5c00fc847b3f584_activated::
      "__test_001_Packages_installed_installed" usebundle => cfdc_packages:installed("04d95ef41b01cbd5b5c00fc847b3f584", "default:cfsketch_run.__test_001_Packages_installed_installed_metadata", @(cfsketch_run.__test_001_Packages_installed_installed_pkgs_add), @(cfsketch_run.__test_001_Packages_installed_installed_pkgs_delete)), ifvarclass => "(debian|ubuntu)", useresult => "return___test_001_Packages_installed_installed";

  reports:
    inform_mode::
      "activation __test_001_Packages_installed_installed could not run because it requires classes (debian|ubuntu)" ifvarclass => "inform_mode.!((debian|ubuntu))";
}
